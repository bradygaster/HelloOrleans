name: Build and deploy .NET application to Container App silo

on:
  push:
    branches:
    - deploy

env:
  CONTAINER_APP_RESOURCE_GROUP_NAME: orleansonaca02
  CONTAINER_REGISTRY_LOGIN_SERVER: orleansonaca02acr.azurecr.io

  SILO_DOCKER_FILE_PATH: Silo/Dockerfile
  SILO_IMAGE_NAME: silo

  DASHBOARD_DOCKER_FILE_PATH: Dashboard/Dockerfile
  DASHBOARD_IMAGE_NAME: dashboard

  MINIMAL_CLIENT_DOCKER_FILE_PATH: Clients.MinimalApi/Dockerfile
  MINIMAL_CLIENT_IMAGE_NAME: minimalapiclient

  WORKERSERVICE_CLIENT_DOCKER_FILE_PATH: Clients.WorkerService/Dockerfile
  WORKERSERVICE_CLIENT_IMAGE_NAME: workerserviceclient

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout to the branch
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.helloorleansregistry_USERNAME_FFFF }}
        password: ${{ secrets.helloorleansregistry_PASSWORD_FFFF }}

    - name: Build and push Silo image to registry
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.SILO_IMAGE_NAME }}:${{ github.sha }}
        file: ${{ env.SILO_DOCKER_FILE_PATH }}
    
    - name: Build and push Dashboard image to registry
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.DASHBOARD_IMAGE_NAME }}:${{ github.sha }}
        file: ${{ env.DASHBOARD_DOCKER_FILE_PATH }}

    - name: Build and push Minimal Client image to registry
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.MINIMAL_CLIENT_IMAGE_NAME }}:${{ github.sha }}
        file: ${{ env.MINIMAL_CLIENT_DOCKER_FILE_PATH }}

    - name: Build and push Worker Service Client image to registry
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.WORKERSERVICE_CLIENT_IMAGE_NAME }}:${{ github.sha }}
        file: ${{ env.WORKERSERVICE_CLIENT_DOCKER_FILE_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AzureSPN }}

    - name: Installing Container Apps extension
      uses: azure/CLI@v1
      with:
        inlineScript: >
          echo "Installing containerapp extension"

          az config set extension.use_dynamic_install=yes_without_prompt

          az extension add --name containerapp --yes

    - name: Deploy Silo
      uses: azure/CLI@v1
      with:
        inlineScript: >
          echo "Deploying Silo"
          
          az containerapp registry set -n silo -g ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --server ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} --username ${{ secrets.helloorleansregistry_USERNAME_FFFF }} --password ${{ secrets.helloorleansregistry_PASSWORD_FFFF }} --debug

          az containerapp update -n silo -g ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} -i ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.SILO_IMAGE_NAME }}:${{ github.sha }} --debug

    - name: Deploy Dashboard
      uses: azure/CLI@v1
      with:
        inlineScript: >
          echo "Deploying Dashboard"
          
          az containerapp registry set -n dashboard -g ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --server ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} --username ${{ secrets.helloorleansregistry_USERNAME_FFFF }} --password ${{ secrets.helloorleansregistry_PASSWORD_FFFF }} --debug

          az containerapp update -n dashboard -g ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} -i ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.DASHBOARD_IMAGE_NAME }}:${{ github.sha }} --debug

    - name: Deploy Minimal API Client
      uses: azure/CLI@v1
      with:
        inlineScript: >
          echo "Deploying Minimal API Client"
          
          az containerapp registry set -n minimalclient -g ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --server ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} --username ${{ secrets.helloorleansregistry_USERNAME_FFFF }} --password ${{ secrets.helloorleansregistry_PASSWORD_FFFF }} --debug

          az containerapp update -n minimalclient -g ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} -i ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.MINIMAL_CLIENT_IMAGE_NAME }}:${{ github.sha }} --debug

    - name: Deploy Worker Service Client
      uses: azure/CLI@v1
      with:
        inlineScript: >
          echo "Deploying Worker Service Client"
          
          az containerapp registry set -n workerserviceclient -g ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --server ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} --username ${{ secrets.helloorleansregistry_USERNAME_FFFF }} --password ${{ secrets.helloorleansregistry_PASSWORD_FFFF }} --debug

          az containerapp update -n workerserviceclient -g ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} -i ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.WORKERSERVICE_CLIENT_IMAGE_NAME }}:${{ github.sha }} --debug

    - name: logout
      run: >
        az logout
